setwd("~/GitHub/Spring21/Energy Analytics/HW/Assignment 1")
library(ggplot2)
library(forecast)
library(fitdistrplus)
source('~/GitHub/Spring21/Energy Analytics/HW/Assignment 1/powerAnalysis.R', echo=TRUE)
library(zoo)
source('~/GitHub/Spring21/Energy Analytics/HW/Assignment 1/powerAnalysis.R', echo=TRUE)
ggseasonplot(powerMean, main="30 Day Rolling Mean - Wind Power Time Series",
ylab = "Power (MW)") +
theme(axis.ticks.x = element_blank(), axis.text.x = element_blank()) +
geom_vline(xintercept=0.25) + geom_vline(xintercept = 0.5) +
geom_vline(xintercept = 0.75) # + geom_vline(xintercept = 1)
ggseasonplot(speedMean, main="30 Day Rolling Mean - Wind Speed Time Series",
ylab = "Wind Speed (m/s)") +
theme(axis.ticks.x = element_blank(), axis.text.x = element_blank()) +
geom_vline(xintercept=0.25) + geom_vline(xintercept = 0.5) +
geom_vline(xintercept = 0.75) # + geom_vline(xintercept = 1)
speedMean <- rollmean(yearSpeed, k = 8640, fill= NA)
ggseasonplot(speedMean, main="30 Day Rolling Mean - Wind Speed Time Series",
ylab = "Wind Speed (m/s)") +
theme(axis.ticks.x = element_blank(), axis.text.x = element_blank()) +
geom_vline(xintercept=0.25) + geom_vline(xintercept = 0.5) +
geom_vline(xintercept = 0.75) # + geom_vline(xintercept = 1)
ggseasonplot(weekSpeed, main="1 Week - Wind Speed Time Series",
ylab = "Wind Speed (m/s)") +
theme(axis.ticks.x = element_blank(), axis.text.x = element_blank()) +
geom_vline(xintercept=0.25) + geom_vline(xintercept = 0.5) +
geom_vline(xintercept = 0.75) # + geom_vline(xintercept = 1)
ggseasonplot(weekSpeed, main="1 Week - Wind Speed Time Series",
ylab = "Wind Speed (m/s)") +
theme(axis.ticks.x = element_blank(), axis.text.x = element_blank())
